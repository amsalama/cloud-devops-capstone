version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    # parameters:
    #   # Add parameter here
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws s3 rb "s3://udapeople-${CIRCLE_WORKFLOW_ID}" --force
            aws cloudformation delete-stack --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID}"
            aws cloudformation delete-stack --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID}"
orbs:
  slack: circleci/slack@3.4.2
  aws-eks: circleci/aws-eks@1.0.3
jobs:
  build:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python --version
            python3.7 -m venv venv
            . venv/bin/activate
            pip install pylint
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  docker-build:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: build docker image
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            make build
  docker-push:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: push image to Dockerhub
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            make ppush

workflows:
  default:
    jobs:
      - build
      - docker-build:
          requires: [build]
      - docker-push:
          requires: [docker-build]
